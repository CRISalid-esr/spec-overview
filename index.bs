<pre class='metadata'>
Title : Aperçu des spécifications de ResearcherPod
Shortname : aperçu
Level : 1
Status : LS
URL : https://mellonscholarlycommunication.github.io/spec-overview
Editor : Miel Vander Sande, [meemoo - Institut flamand pour les Archives](https://meemoo.be), miel.vandersande@meemoo.be
Editor : Patrick Hochstenbach, [IDLab - Université de Gand](https://knows.idlab.ugent.be), patrick.hochstenbach@ugent.be
Editor : Ruben Dedecker, [IDLab - Université de Gand](https://knows.idlab.ugent.be), ruben.dedecker@ugent.be
Editor : Jeroen Werbrouck, [IDLab - Université de Gand](https://knows.idlab.ugent.be), Jeroen.Werbrouck@ugent.be
Editor : Ce document introduit une série de rapports techniques facilitant la mise en œuvre d'un écosystème décentralisé d'échange de données utilisant Solid.
!Translation: David Reymond [IMSIC - Université de Toulon](http://www.univ-tln.fr), david.reymond@univ-tln.fr
Abstract : Ce document présente un ensemble de rapports techniques qui facilitent la mise en œuvre d'un écosystème décentralisé d'échange de données utilisant Solid.
Markup Shorthands : markdown yes
</pre>

<style>
table {
  margin: 25px auto;
  border-collapse: collapse;
  border: 1px solid #eee;
  border-bottom: 2px solid #005A9C;
}
table tr:hover {
  background: #f4f4f4;
}
table tr:hover td {
  color: #555;
}
table th, table td {
  color: #999;
  border: 1px solid #eee;
  padding: 12px 12px;
  border-collapse: collapse;
}
table th {
  background: #005A9C;
  color: #fff;
}
table th.last {
  border-right: none;
}
</style>

Ensemble de documents {#set}
=======================

Ce document fait partie des spécifications produites par les projets **ResearcherPod** et **ErfgoedPod** :

1. [Aperçu](/spec-overview/) (ce document)
2. [Orchestrator](/spec-orchestrator/) 
3. [Data Pod](/spec-datapod/)
4. [Langage de règles](/spec-rulelanguage/)
5. [Journal des événements du cycle de vie des artefacts](/spec-eventlog/)
6. [Notifications](/spec-notifications/)
7. [Collecteur](/spec-collector/)

Introduction {#intro}
=====================

Ce document introduit une série de rapports techniques facilitant la mise en œuvre d'un écosystème décentralisé d'échange de données en utilisant le protocole [[solid-protocol]].
L'objectif n'est pas d'établir une conception réseau pour la transmission de données.
Au contraire, il devrait permettre à des agents (humains ou machines) de rendre des artefacts disponibles dans le réseau, 
d'ajouter de la valeur aux artefacts disponibles et d'échanger des messages sur ces activités.
Essentiellement, ces rapports se concentrent sur deux problèmes génériques communs aux réseaux Web décentralisés :

- exécuter et automatiser des processus métier impliquant un ensemble distribué d'acteurs.
- découvrir et collecter des informations distribuées sur le réseau.

La découverte d'informations stockées sur le Web décentralisé peut être assez générique. Dans ce projet, il y a un accent particulier sur la découverte des événements du cycle de vie auxquels les artefacts sont soumis.
Des exemples de tels événements de cycle de vie dans le domaine de la publication académique sont des informations sur quand et où des articles ont été cités, révisés par des pairs, ou publiés dans une revue, archivés dans une archive Web.

Ce travail vise à compléter le [[solid-tr]] avec un cadre concret pour la construction d'un réseau décentralisé semi-automatisé pour un cas d'utilisation ou un domaine spécifique.
Il s'agit d'une production conjointe de deux projets alignés :

- ResearcherPod : un projet de [l'Université de Gand - IDLab](http://idlab.ugent.be) financé par la [fondation Andrew W. Mellon](https://mellon.org/) qui explore un système de communication académique alternatif centré sur le chercheur, activé par l'institution et aligné sur les concepts et technologies du Web décentralisé.
- ErfgoedPod : une collaboration entre [Netwerk Digitaal Erfgoed](https://netwerkdigitaalerfgoed.nl), [meemoo - Institut flamand pour l'archivage](https://meemoo.be) et [l'Université de Gand - IDLab](http://idlab.ugent.be) pour enquêter sur la faisabilité de l'application de [Solid](https://solidproject.org/) et des concepts du Web décentralisé pour établir un réseau d'échange durable pour les données du patrimoine numérique.

Éléments de travail {#work-items}
=====================

Le tableau suivant donne un aperçu de tous les rapports techniques et des sujets sur lesquels nous travaillons.
Les rapports incorporés ont été discutés parmi les membres du projet et sont construits comme des livrables du projet.
Au cours de ces projets, les informations dans ces documents peuvent être sujettes à des modifications, veuillez donc consulter le statut de publication et les versions de chaque document pour plus de détails.
Bien sûr, vous êtes invité à [contribuer](https://github.com/MellonScholarlyCommunication/spec-overview/issues) à tout feedback, commentaire ou question que vous pourriez avoir.

<table>
	 <caption>Rapports Techniques</caption>
	 <thead>
		  <tr>
				<th>Élément de travail</th>
				<th>Dépôt</th>
				<th>État actuel</th>
				<th>État suivant</th>
				<th>Cible</th>
				<th>Fin prévue</th>
		  </tr>
	 </thead>
	 <tbody>
		  <tr>
			 <td><a href="/spec-overview/" rel="cito:citesForInformation">Ce document.</a></td>
			 <td><a href="https://github.com/mellonscholarlycommunication/spec-overview">spec-overview</a></td>
			 <td>Rapport technique</td>
			 <td>Rapport technique</td>
			 <td>Rapport technique</td>
			 <td>T1 2022</td>
		  </tr>
		  <tr>
				<td><a href="/spec-orchestrator/" rel="cito:citesForInformation">Spécification du composant Orchestrator.</a></td>
				<td><a href="https://github.com/mellonscholarlycommunication/spec-orchestrator">spec-orchestrator</a></td>
				<td>Brouillon de travail</td>
				<td>Rapport technique provisoire</td>
				<td>Rapport technique</td>
				<td>T4 2022</td>
		  </tr>
		  <tr>
				<td><a href="/spec-datapod/" rel="cito:citesForInformation">Directives de mise en œuvre et exigences supplémentaires pour les pods de données Solid.</a></td>
				<td><a href="https://github.com/mellonscholarlycommunication/spec-datapod">spec-datapod</a></td>
				<td>Brouillon de travail</td>
				<td>Rapport technique provisoire</td>
				<td>Rapport technique</td>
				<td>T4 2022</td>
		  </tr>
		  <tr>
				<td><a href="/spec-rulelanguage/" rel="cito:citesForInformation">Spécification du langage de règles pour créer des processus métier exécutables.</a></td>
				<td><a href="https://github.com/mellonscholarlycommunication/spec-rulelanguage">spec-rulelanguage</a></td>
				<td>Brouillon de travail</td>
				<td>Rapport technique provisoire</td>
				<td>Rapport technique</td>
				<td>T4 2022</td>
		  </tr>
		  <tr>
				<td><a href="/spec-eventlog/" rel="cito:citesForInformation">Exigences de mise en œuvre pour le Journal des événements du cycle de vie des artefacts.</a></td>
				<td><a href="https://github.com/mellonscholarlycommunication/spec-datapod">spec-datapod</a></td>
				<td>Brouillon de travail</td>
				<td>Rapport technique provisoire</td>
				<td>Rapport technique</td>
				<td>T2 2022</td>
		  </tr>
		  <tr>
				<td><a href="/spec-notifications/" rel="cito:citesForInformation">Spécification des notifications possibles qui peuvent être utilisées dans le réseau.</a></td>
				<td><a href="https://github.com/mellonscholarlycommunication/spec-notifications">spec-notifications</a></td>
				<td>Brouillon de travail</td>
				<td>Rapport technique</td>
				<td>Rapport technique</td>
				<td>T1 2022</td>
		  </tr>
		  <tr>
				<td><a href="/spec-collector/" rel="cito:citesForInformation">Spécification du composant Collector.</a></td>
				<td><a href="https://github.com/mellonscholarlycommunication/spec-collector">spec-collector</a></td>
				<td>Brouillon de travail</td>
				<td>Rapport technique provisoire</td>
				<td>Rapport technique</td>
				<td>T4 2022</td>
		  </tr>
	 </tbody>

	 <tfoot>
		  <tr>
		  <td colspan="6"></td>
		  </tr>
	 </tfoot>

</table>

<figure>
<img src="./images/terminology.svg" />
<figcaption>
Terminologie utilisée dans les spécifications.
</figcaption>
</figure>

Les termes suivants sont utilisés dans toutes les spécifications :

: <dfn export>Agent</dfn>
:: Un agent est une personne, une organisation ou un logiciel identifié par un [[solid-protocol#uniform-resource-identifier|URI]]; par exemple, un WebID désigne un agent [[webid]] (citée de [[solid-protocol]]).
:: Les agents participent activement au réseau : ils effectuent des actions, sont identifiés par un [[webid]], et sont adressés via [=notification=].

: <dfn export>Artefact</dfn>
:: Un artefact est une [[solid-protocol#resource|ressource Web]] identifiée par un [[solid-protocol#uniform-resource-identifier|URI]] qui sert de point focal principal d'interaction entre [=agents=]. Des exemples incluent une image numérisée dans une archive, la page Web d'une publication scientifique, une représentation numérique d'un objet du patrimoine culturel ou un ensemble de données dans un référentiel.
:: Les artefacts peuvent être atomiques ou arbitrairement complexes. Leur organisation est hors du champ d'application de ce document et dépend de la communauté de développement.

: <dfn export>Notification</dfn>
:: Une notification est un message livré d'un [=agent=] à un autre en utilisant le protocole [[ldn|Linked Data Notifications (LDN)]].
:: Les notifications sont exprimées dans [[activitystreams-vocabulary|Activity Streams 2.0 (AS2.0)]] et leur charge utile décrit une [=activité=].

: <dfn export>Activité</dfn>
:: Une activité décrit une forme d'action passée ou présente directement ou indirectement liée à un [=artefact=].
:: Les activités sont conformes aux [[activitystreams-vocabulary#activities|Activités AS2.0]].

: <dfn export>Service à valeur ajoutée</dfn>
:: Un service qui accroît d'une manière ou d'une autre la valorisation sociale d'un [=artefact=] sans le modifier.
:: Des exemples incluent la promotion, la certification, l'obtention d'une bonne critique, etc.

: <dfn export>Résultat de service</dfn>
:: Un résultat de service est tout résultat de la fourniture d'un service à valeur ajoutée pour un [=artefact=].
:: Les résultats de service peuvent être des [[solid-protocol#resource|ressources Web]] disponibles à une adresse réseau ou mentionnées en ligne dans une [=activité=] adressée à l'[=agent=] propriétaire du [=nœud de données=] où l'[=artefact=] est hébergé.

: <dfn export>Nœud</dfn>
:: Un nœud est le composant principal du réseau. Il fournit des artefacts ou des services liés aux artefacts au réseau et peut communiquer avec d'autres nœuds.
:: Un nœud est un [[solid-protocol#http-server|serveur HTTP]] qui héberge deux types de ressources : une [=boîte de réception=] et un [=Journal des événements du cycle de vie=].
:: Il est également un [[ldn#receiver|Émetteur]], [[ldn#receiver|Récepteur]] et [[ldn#receiver|Consommateur]] de notifications de données liées.

: <dfn export>Nœud de données</dfn>
:: Un nœud de données est un [=nœud=] qui héberge des [=artefacts=].

: <dfn export>Nœud de service</dfn>
:: Un nœud de service est un [=nœud=] qui fournit des services à valeur ajoutée pour des [=artefacts=] hébergés par des [=nœuds de données=], mais n'héberge pas lui-même des [=artefacts=]. Il peut héberger des [=résultats de service=].
:: Un nœud de service répond au minimum aux exigences du [=nœud=], mais peut également être une implémentation (partielle) du [[solid-protocol]].
:: Notez que lorsqu'un nœud de service crée un nouveau [=artefact=] en résultat de la fourniture d'un service à valeur ajoutée pour un artefact, ce nouvel [=artefact=] peut être rendu disponible dans le réseau en tant que tel et peut lui-même devenir le sujet d'[=activités=]. À ce moment-là, cependant, le nœud de service doit avoir un [=nœud de données=] associé par lequel le nouveau [=artefact=] est rendu disponible.

: <dfn export>Boîte de réception</dfn>
:: Une boîte de réception est une [[solid-protocol#resource|ressource web]] conforme à la [[!ldn|spécification Linked Data Notifications]]. Dans le cas où le [=nœud=] qui héberge la boîte de réception est un [=pod de données=], celle-ci est généralement mise en œuvre comme un [[ldp#ldpc-container|conteneur LDP]].
:: Les [=agents=] peuvent POSTER une [=activité=] afin d'envoyer des informations relatives à un [=artefact=] à un autre [=agent=], afin d'informer l'autre partie ou de demander un service.

: <dfn export>Événement du cycle de vie</dfn>
:: Un événement du cycle de vie est une [=activité=] relative à un [=artefact=] qui impacte le cycle de vie de l'artefact et qui est rendu public. Il est communiqué via une [=notification=] que le [=nœud=] envoyant ou recevant la [=notification=] juge pertinent de divulguer.

: <dfn export>Journal des événements du cycle de vie</dfn>
:: Un journal des événements du cycle de vie est une [[solid-protocol#resource|ressource web]] publique à ajout seulement qui expose une série d'[=événements du cycle de vie=] liés à des [=artefacts=] stockés par des [=nœuds de données=] et des services fournis par des [=nœuds de service=].
:: Il construit une vue sur le contenu d'une [=boîte de réception=] qui est déterminée par un [=sélecteur=], permettant de consommer un sous-ensemble sélectionné d'[=activités=] (par exemple, regroupées par artefact). Un [=nœud=] est responsable de rendre le journal des événements du cycle de vie publiquement découvrable.

: <dfn export>Sélecteur</dfn>
:: Un sélecteur est une fonction booléenne qui décide si une [=activité=] appartient ou non au [=journal des événements du cycle de vie=] ou non.

: <dfn export>Collecteur</dfn>
:: Une application Web automatisée qui collecte des informations à partir des [=journaux des événements du cycle de vie=] hébergés par n'importe quel [=nœud=].

Les termes suivants sont spécifiques aux [=nœuds de données=] qui, en plus de répondre aux exigences minimales, implémentent également le [[solid-protocol]] :

<figure>

<img src="./images/terminology-pod.svg" />
<figcaption>
Terminologie spécifique aux [=nœuds de données=] implémentés avec [[solid-protocol|Solid]].
</figcaption>
</figure>

: <dfn export>Pod de données</dfn>
:: Un pod de données est un espace de stockage de documents, avec des mécanismes permettant de contrôler qui peut accéder à quoi (citée de [[solid-protocol]]).
:: Un pod de données peut être utilisé pour construire un [=nœud de données=] conforme au [[solid-protocol]]. Il stocke des [=artefacts=] qui sont rendus disponibles au réseau et est un [[ldn#receiver|Récepteur]] de notifications de données liées.

: <dfn export>Propriétaire du Pod de données</dfn>
:: Un propriétaire est une personne ou une entité sociale considérée comme ayant les droits et responsabilités d'un stockage de données. Un propriétaire est identifié par un URI et a implicitement le contrôle sur toutes les données dans un stockage. Un propriétaire est défini lors de la provision du stockage et peut être modifié (citée de [[solid-protocol]]).
:: Un propriétaire de pod de données est un [=agent=] responsable de la maintenance du [=pod de données=] et de ses [=artefacts=]. Le propriétaire peut être identifié par son [[webid]] et contacté via une [=boîte de réception=].
:: Par exemple : dans le cas où le pod de données stocke des artefacts universitaires, le propriétaire est généralement un auteur ou un contributeur à ces artefacts. Dans le cas où le pod de données stocke des objets du patrimoine numérique, le propriétaire est généralement l'institution ou l'employé institutionnel qui conserve et entretient ces collections.

: <dfn export>Propriétaire du nœud de service</dfn>
:: Le propriétaire du nœud de service est l'[=agent=] responsable de la maintenance du [=nœud de service=] et du service qu'il fournit.
:: Le propriétaire peut être identifié par son [[webid]] et contacté via une [=boîte de réception=].

: <dfn export>Tableau de bord</dfn>
:: Le tableau de bord est une application Web orientée utilisateur qui permet à un [=agent=] d'interagir manuellement avec d'autres [=agents=] ou [=nœuds=] dans le réseau.
:: Le tableau de bord est un [[ldn#receiver|Émetteur]] et [[ldn#receiver|Consommateur]] de notifications de données liées. S'il est utilisé pour gérer un [=pod de données=], il sera également une implémentation conforme de [[solid-protocol#solid-app|Solid App]].

: <dfn export>Orchestrator</dfn>
:: L'orchestrateur est une application Web autonome qui opère au nom d'un [=agent=] et a accès à un [=pod de données=]. Il interprète et exécute des règles métier décrites dans un [=livre de règles=].
:: L'orchestrateur est également un [[ldn#receiver|Émetteur]] et [[ldn#receiver|Consommateur]] de notifications de données liées.

: <dfn export>Livre de règles</dfn>
:: Un ensemble de règles métier lisibles par machine qui instruit l'[=orchestrateur=] sur les actions à prendre en réponse aux [=notifications=] entrantes.

Agents, Artéfacts et Résultats de service {#agents-arte}
=======================================================

Les artefacts sont le principal point d'attention de cette conception de réseau décentralisé.
Ce sont des morceaux de données (par exemple, un fichier, un document, ...) produits par les agents qui participent au réseau et hébergés sur les [=nœuds de données=].
L'objectif n'est cependant pas de permettre l'échange d'artefacts, mais plutôt de faciliter le discours à leur sujet.

Les artefacts ont une valeur potentielle dans le domaine dans lequel les agents opèrent.
Sur le réseau, les agents peuvent envoyer des messages à d'autres agents pour demander des services à valeur ajoutée.
Chaque service exécuté augmente la chaîne de valeur d'un artefact, qui est publiée dans un journal d'événements.
Le contenu d'un artefact est considéré comme étant hors de portée, et donc, ils sont considérés comme des boîtes noires pour la conception du réseau.

Les services sont effectués par des [=nœuds de service=] et peuvent produire un [=Résultat de service=] après exécution.
Les résultats de service sont hébergés sur des [=nœuds de service=] et fournissent des métadonnées sur l'exécution du service.
La différence avec les artefacts est que les résultats de service manquent d'une chaîne de valeur pertinente.
Si nécessaire, un résultat de service peut être promu en artefact,
par exemple, lorsque la revue d'un document devient elle-même sujet de revue.
Dans ce cas, cependant, le nœud de service prend le rôle de [=nœud de données=] également.

L'exemple suivant illustre une interaction de base pour laquelle cette conception de réseau peut être appliquée.

1. Un agent appelé Alice crée un artefact : un document. Le document est stocké dans le Pod d'Alice.
2. Alice propose l'artefact à un service de revue (un nœud de service et un agent) afin de le faire examiner.
3. Le service de revue effectue le service et produit un résultat de service.
4. Le service de revue informe Alice que le service a été effectué.
5. La chaîne de valeur du document est améliorée avec un événement examiné.

<figure>
  <img src="./images/flow.svg" />
  <figcaption>
  Exemple de flux de travail.
  </figcaption>
</figure>

Tableau de bord et Orchestrator {#differences}
=======================================================

Dans une implémentation Solid de ces spécifications,
deux applications logicielles interagissent directement avec le [=Pod de données=] avec des privilèges différents : l'[=Orchestrator=] et le [=Tableau de bord=].
Bien que ces applications puissent se chevaucher ou ne pas être nécessaires du tout (dans
certains cas d'utilisation), dans nos spécifications, elles sont traitées comme des entités distinctes pour faciliter la discussion.
Certaines raisons pour lesquelles ces applications pourraient être traitées comme des entités distinctes :

- privilèges nécessaires pour accéder au [=pod de données=]
- exigences nécessaires pour recevoir des commentaires directs d'un [=agent=]
- exigences nécessaires pour être **en ligne** en permanence
- exigences nécessaires pour implémenter correctement les [=notifications=] et les [=livres de règles=]

Typiquement, le [=Tableau de bord=] s'exécute dans un navigateur et répond aux commentaires d'un [=agent=].
Il peut être en mode en ligne ou hors ligne, s'exécutant sur l'ordinateur de l'[=agent=] dans l'un des onglets du navigateur.
L'[=Orchestrator=], cependant, s'exécute en tant que processus en arrière-plan *toujours actif* ou en tant que service Web distant.
Les deux peuvent lire l'[=Inbox=] du [=Pod de données=] et ajouter au [=Journal d'événements du cycle de vie=]. Les deux communiquent avec le réseau en utilisant les [=Notifications=].
Seul l'[=Orchestrator=] est guidé par un [=Livre de règles=] et fonctionne avec peu d'intervention humaine.

Le réseau ci-dessous démontre les privilèges CRUD imaginés pour les différents [=agents=] dans ce document.
Le premier réseau démontre une configuration Solid typique où le [=tableau de bord=] est une application monopage qui a un accès direct
au [=pod de données=]. L'[=Orchestrator=] pourrait être un processus faisant partie du [=tableau de bord=],
mais s'exécute ici en tant que service réseau distinct.
Il est toujours en ligne et fonctionne au nom du [=propriétaire du pod de données=].
Enfin, il peut y avoir d'autres applications dans le
réseau (indiqué par Something) qui peuvent lire des données du [=pod de données=] ou envoyer des [=notifications=] au [=pod de données=], mais sans nécessiter de privilèges directs pour modifier des artefacts sur le [=pod de données=].

<figure>
  <img src="images/mellon-crud-app.svg" width="80%">
  <figcaption>
  Opérations CRUD dans le cas où le [=tableau de bord=] est une application monopage et [=Orchestrator=] une tâche en arrière-plan
  </figcaption>
</figure>

Le deuxième réseau montre une configuration plus classique avec un [=Tableau de bord=] de navigateur contrôlé par une application serveur qui utilise un
[=pod de données=] comme stockage backend.

<figure>
  <img src="images/mellon-crud.svg" width="80%"></div>
  <figcaption>
  Opérations CRUD dans le cas où le [=tableau de bord=] et un [=nœud de service=] (qui s'exécute également vers un
  composant [=Orchestrator=]) est une application client/serveur classique
  </figcaption>
</figure>

Communication entre les Pods de données et les réseaux spécifiques au domaine {#domain-specific-networks}
============================================================

## Communication entre le Pod de données et le réseau de la communauté savante ## {#scholarly-comm}

Les [=notifications=] peuvent être envoyées de l'environnement de recherche aux environnements des [=nœuds de service=].
Par exemple, en cas de demande d'examen d'un artefact qui réside dans le [=pod de données=], une
[=notification=] appropriée peut être envoyée à un nœud de service de revue. Le nœud de service peut répondre,
par exemple, en acceptant ou en refusant la demande d'examen, et, dans ce dernier cas, relayer
le résultat de l'examen.

L'[=Orchestrator=] envoie des notifications en réponse à des déclencheurs résultant de l'exécution du
livre de règles associé au [=pod de données=]. L'[=Orchestrator=]
reçoit des notifications en réponse à celles qu'il a envoyées. L'[=Orchestrator=] enregistre sélectivement les informations
contenues dans les notifications sortantes et entrantes dans le [=Journal d'événements du cycle de vie=].

Les [=notifications=] sont considérées comme une approche de haut niveau pour coordonner automatiquement l'exécution distribuée des fonctions cruciales de la communication savante. Les notifications garantissent simplement que les
fonctions respectives sont effectivement exécutées conformément au livre de règles, mais n'essaient pas d'automatiser
l'accomplissement réel de la fonction elle-même. Par exemple, lorsqu'une `Offre` est envoyée à un service de revue,
nous n'envisageons pas que le message contienne toutes les étapes pour automatiser complètement le processus de soumission.
Il pourrait contenir suffisamment de métadonnées pour permettre des flux de travail simples. En général, une communication
hors bande pourrait être nécessaire pour effectuer toutes les étapes requises.

## Communication entre le Pod de données et le réseau du patrimoine culturel ## {#cultural-heritage}

Dans le domaine du patrimoine culturel,
les institutions qui gèrent des collections, telles que des musées ou des bibliothèques, et
les fournisseurs de services, tels que des conservateurs d'objets, des portails orientés utilisateur ou des archives numériques,
participent à un réseau commun dans le but de partager efficacement des métadonnées numériques et des objets.
Les institutions maintiennent un [=pod de données=] comme point d'échange principal pour les métadonnées sur leurs collections.
Les portails destinés aux utilisateurs finaux visent à collecter des sous-ensembles thématiques de cette sélection de pods.
Entre eux, il y a une couche de services facilitants qui

- rendent les données trouvables pour les portails et autres applications, tels que l'indexation des métadonnées pour la recherche ou la diffusion d'informations sur la collection à d'autres membres du réseau;
- fournissent des services à valeur ajoutée aux institutions, tels que l'enrichissement des métadonnées en ajoutant des liens vers d'autres collections ou la réalisation de la préservation numérique.

Les institutions utilisent des notifications pour demander des services auprès du [=nœud de service=] désigné, par exemple, elles peuvent `Offrir` un ensemble de données à un service d'enrichissement.
De plus, les notifications sont utilisées par toutes les parties pour s'informer mutuellement des changements pertinents.
Un [=nœud de service=] peut répondre, par exemple, en acceptant ou en refusant la demande de préservation numérique, ou simplement en prenant note.
Le résultat d'un service, c'est-à-dire que l'objet est préservé numériquement à long terme, est une nouvelle pièce de métadonnées qui augmente le cycle de vie de l'objet.
Cet événement peut être communiqué avec une nouvelle notification à l'institution qui a fait la demande ou à d'autres [=agents=] intéressés dans le réseau.

Motivées par un mélange de politiques dérivées des exigences institutionnelles et de coopération,
les institutions suivent des processus qui dictent quand demander certains services, contacter d'autres [=agents=] et dans quel ordre.
Ces processus peuvent être déclarés dans un [=livre de règles=] et exécutés de manière automatisée par un [=Orchestrator=].

Les services qui comblent le fossé entre le [=pod de données=] et les portails de consommation de données peuvent maintenir leur propre [=pod de données=],
pour stocker et exposer des dérivés aux couches supérieures du réseau.
Par exemple,
un [=nœud de service=] qui collecte des ensembles de données des [=pods de données=] des institutions pour générer des résumés et des enrichissements d'ensembles de données peut stocker ces résultats.
À son tour, un portail d'utilisateur final peut utiliser les données de ce [=nœud de service=] pour trouver des [=pods de données=] avec des données pertinentes.

Remerciements {#acknowledgement}
============================================================

Nous remercions Herbert Van de Sompel, [DANS + Université de Gand](https://dans.knaw.nl/nl/), hvdsomp@gmail.com
pour sa précieuse contribution tout au long de ce projet.

<pre class=biblio>
{
	"solid-protocol": {
		"authors": [
			"Sarven Capadisli",
			"Tim Berners-Lee",
			"Ruben Verborgh",
			"Kjetil Kjernsmo"
		],
		"href": "https://solidproject.org/TR/protocol",
		"title": "Le Protocole Solid",
		"status": "Publié",
		"publisher": "Projet Solid",
		"deliveredBy": [
			"https://www.w3.org/community/solid/"
		]
	},
  "webid": {
		"authors": [
			"Andrei Sambra",
			"Henry Story",
			"Tim Berners-Lee"
		],
		"href": "https://dvcs.w3.org/hg/WebID/raw-file/tip/spec/identity-respec.html",
		"title": "WebID 1.0",
		"status": "Brouillon de l'éditeur",
		"publisher": "Groupe de la communauté WebID",
		"deliveredBy": [
			"https://www.w3.org/community/webid/"
		]
	},
  "solid-oidc": {
		"authors": [
			"Aaron Coburn (Inrupt)",
			"elf Pavlik",
			"Dmitri Zagidulin"
		],
		"href": "https://solid.github.io/authentication-panel/solid-oidc/",
		"title": "SOLID-OIDC",
		"status": "Brouillon de l'éditeur",
		"publisher": "Projet Solid",
		"deliveredBy": [
			"https://www.w3.org/community/solid/"
		]
	},
  "solid-tr": {
		"href": "https://solidproject.org/TR/",
		"title": "Rapports Techniques Solid",
		"publisher": "Projet Solid",
		"deliveredBy": [
			"https://www.w3.org/community/solid/"
		]
	}
}
</pre>
